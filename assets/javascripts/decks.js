// Generated by CoffeeScript 1.4.0
(function() {
  var Card, cards_encoded, cards_id, count, deck, decode, decoded, i, id, locale, side, _i, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  locale = 'zh';

  Card = (function(_super) {

    __extends(Card, _super);

    function Card() {
      return Card.__super__.constructor.apply(this, arguments);
    }

    Card.configure("Card", "atk", "name");

    Card.extend(Spine.Model.Ajax);

    Card.extend(Spine.Events);

    Card.url = "https://api.mongolab.com/api/1/databases/mycard/collections/cards?apiKey=508e5726e4b0c54ca4492ead";

    Card.locale_url = "https://api.mongolab.com/api/1/databases/mycard/collections/lang_" + locale + "?apiKey=508e5726e4b0c54ca4492ead";

    Card.query = function(q, callback) {
      return $.getJSON("" + this.url + "&q=" + (JSON.stringify(q)), function(cards) {
        var card, cards_id;
        cards_id = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = cards.length; _i < _len; _i++) {
            card = cards[_i];
            _results.push(card._id);
          }
          return _results;
        })();
        return $.getJSON("" + Card.locale_url + "&q=" + (JSON.stringify({
          _id: {
            $in: cards_id
          }
        })), function(langs) {
          var id, lang, _i, _j, _len, _len1;
          for (_i = 0, _len = langs.length; _i < _len; _i++) {
            lang = langs[_i];
            id = lang["id"] = lang["_id"];
            for (_j = 0, _len1 = cards.length; _j < _len1; _j++) {
              card = cards[_j];
              if (card["_id"] === id) {
                $.extend(lang, card);
                break;
              }
            }
            (new Card(lang)).save;
          }
          return alert(Card.first());
        });
      });
    };

    return Card;

  })(Spine.Model);

  decode = function(str) {
    var char, key, result, _i, _len;
    key = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789*-=";
    result = 0;
    for (_i = 0, _len = str.length; _i < _len; _i++) {
      char = str[_i];
      result <<= 6;
      result += key.indexOf(char);
    }
    return result;
  };

  $('img#qrcode').attr('src', 'https://chart.googleapis.com/chart?chs=200x200&cht=qr&chl=' + encodeURIComponent(location.href));

  $('#name').html($.url().param('name'));

  cards_encoded = $.url().param('cards');

  deck = [];

  cards_id = [];

  for (i = _i = 0, _ref = cards_encoded.length; _i < _ref; i = _i += 5) {
    decoded = decode(cards_encoded.substr(i, 5));
    side = decoded >> 29;
    count = decoded >> 27 & 0x3;
    id = decoded & 0x07FFFFFF;
    cards_id.push(id);
    deck.push << {
      card_id: id,
      count: count,
      side: side
    };
    $('#cards').append($('<dt />', {
      text: id
    }));
    $('#cards').append($('<dd />', {
      text: count
    }));
  }

  Card.query({
    _id: {
      $in: cards_id
    }
  });

}).call(this);
